@page "/LogInAccount"
@using System.ComponentModel.DataAnnotations
//add the dependencies/injections here later

//class can have a sentence that says: hey, don't have an account? SignIN here. Or maybe be just a button
<div class="card">
    <h3>My Account</h3>
    <div class="form-group field">
        <label>First Name </label>
        <input type="text" @bind="firstName" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(result))
        {
            <label style="@messageColor">@result</label>
        }
    </div>
    <div class="form-group field">
        <label>Last Name </label>
        <input type="text" @bind="lastName" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(result))
        {
            <label style="@messageColor">@result</label>
        }
    </div>
     <div class="form-group field">
            <label>Email </label>
            <input type="email" @bind="email" @bind:event="oninput"/>
            @if (!string.IsNullOrEmpty(result))
            {
                <label style="@messageColor">@result</label>
            }
     </div>
    <div class="form-group field">
        <label>Password </label>
        <input type="text" @bind="password" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(result))
        {
            <label style="@messageColor">@result</label>
        }
    </div>
    <div class="form-group field">
        <label>Address </label>
        <input type="text" @bind="address" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(result))
        {
            <label style="@messageColor">@result</label>
        }
    </div>
    <div class="form-group field">
        <label>City </label>
        <input type="text" @bind="city" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(result))
        {
            <label style="@messageColor">@result</label>
        }
    </div>
     <div class="form-group field">
                <label>Postcode </label>
                <input type="text" @bind="postcode" @bind:event="oninput"/>
                @if (!string.IsNullOrEmpty(result))
                {
                    <label style="@messageColor">@result</label>
                }
     </div>
    <div class="form-group field">
        <label>Country </label>
        <input type="text" @bind="address" @bind:event="oninput"/>
        @if (!string.IsNullOrEmpty(result))
        {
            <label style="@messageColor">@result</label>
        }
    </div>
     <div class="form-group field">
                <label>Are  </label>
                <input type="text" @bind="address" @bind:event="oninput"/>
                @if (!string.IsNullOrEmpty(result))
                {
                    <label style="@messageColor">@result</label>
                }
         </div>
</div>




@code {

    private string name = "";
    private string password = "";
    //I'll keep the email as string for now, but I'll figure out appropriate type
    private string email = "";
    private string address = "";
    private string result = "";
    private string messageColor = "";

    private async Account Create()
    {
        result = "";

        try
        {
            await IServiceProviderIsService.Create(new AccountCreationDto(name, password, email, address));
            name = "";
            password = "";
            email = "";
            address = "";
            result = "Success!";
            messageColor = "green";
        }
        catch (Exception e)
        {
            await Console.Error.WriteAsync("Something went wrong");
            Console.WriteLine(e);
            result = e.Message;
            messageColor = "red";
        }
    }

  }
}